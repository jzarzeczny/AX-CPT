{"version":3,"sources":["Instructions.js","Header.js","DayToChoose.js","Metricsv2.js","Tutorial.js","strategy/useDisplayLogic.js","strategy/Trening.js","DisplayTutorial.js","App.js","reportWebVitals.js","index.js"],"names":["Instructions","useState","agreement","setAgreement","className","action","htmlFor","defaultValue","type","onChange","id","name","to","onClick","e","console","log","preventDefault","Header","props","DayToChoose","validate","values","errors","nickname","length","age","parseInt","gender","education","location","formReducer","state","event","value","Metrics","setErrors","useReducer","formData","setFormData","history","useHistory","handleChange","target","onSubmit","Object","keys","JSON","stringify","push","Tutorial","content","phase","setPhase","handleKey","a","key","displayInstructions","useEffect","document","addEventListener","removeEventListener","sleep","ms","Promise","resolve","setTimeout","waitForClue","waitForResponse","useDisplayLogic","data","setValue","controlOfDisplay","i","clue","probe","response","alert","Trening","DisplayTutorial","setAlert","prep","App","exact","path","Metricsv2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a78e4069.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Instructions = () => {\n  const [agreement, setAgreement] = useState(false);\n\n  function handleClick(e) {\n    console.log(agreement);\n    if (!agreement) {\n      e.preventDefault();\n    } else if (agreement) {\n      return;\n    }\n  }\n\n  return (\n    <div className=\"instructions\">\n      <h2>Instrukcja</h2>\n      <p>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eligendi,\n        aliquid cupiditate optio deserunt provident quos officiis a ipsum, eius\n        id ea odio! Dolores ratione aspernatur, illo nam aperiam doloribus\n        voluptates.\n      </p>\n      <h2 className=\"key-info\">Informacje zbierane</h2>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Corporis ex\n        consequatur obcaecati vel dolorem ipsam, nemo illo, perferendis velit\n        facere quos exercitationem odio, iure sint repellendus suscipit quia\n        ratione voluptatibus.\n      </p>\n      <form action=\"#\">\n        <div className=\"agree\">\n          <label htmlFor=\"agreement\">Wyrażam zgodę na badanie:</label>\n          <input\n            defaultValue={agreement}\n            type=\"checkbox\"\n            onChange={() => setAgreement(!agreement)}\n            id=\"agreement\"\n            name=\"agreement\"\n          ></input>\n        </div>\n      </form>\n      <div className=\"buttonWrapper\">\n        <Link\n          to=\"/tutorial\"\n          onClick={handleClick}\n          className=\"btn\"\n          type=\"button\"\n        >\n          Przejdź do kwestionariusza\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  function doIKnowYou(name) {\n    if (name === null) {\n      return \"Nie jesteś zalogowany\";\n    } else {\n      return \"Witaj \" + name;\n    }\n  }\n\n  return (\n    <header>\n      <Link to=\"/\">\n        <button className=\"homePageButton\">Strona główna</button>\n      </Link>\n      <p>{doIKnowYou(props.name)}</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\n\nconst DayToChoose = () => {\n  return (\n    <div className=\"containerOfDayToChoose\">\n      <Link to=\"/metrics\">\n        <button className=\"card\">\n          <h2>Pierwszy dzień badania</h2>\n          <p>\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n            Praesentium iste nemo error reiciendis beatae numquam aut fugit\n            distinctio, reprehenderit hic eius doloribus aspernatur! Possimus\n            nisi reiciendis dolorum sed architecto! Ipsum.\n          </p>\n        </button>\n      </Link>\n      <button className=\"card\">\n        <h2>Drugi dzień badania</h2>\n        <p>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium\n          iste nemo error reiciendis beatae numquam aut fugit distinctio,\n          reprehenderit hic eius doloribus aspernatur! Possimus nisi reiciendis\n          dolorum sed architecto! Ipsum.\n        </p>\n      </button>\n    </div>\n  );\n};\n\nexport default DayToChoose;\n","import { useState, useReducer } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.nickname) {\n    errors.nickname = \"To pole jest wymagane\";\n  } else if (values.nickname.length > 8) {\n    errors.nickname = \"Wystarczy krótki, maksymalnie 8 znakowy\";\n  }\n\n  if (!values.age) {\n    errors.age = \"To pole jest wymagane\";\n  }\n  if (parseInt(values.age) <= 18 || parseInt(values.age) >= 100) {\n    errors.age = \"Musisz mieć między 18, a 100 lat\";\n  }\n\n  if (!values.gender) {\n    errors.gender = \"Musisz wybrać płeć\";\n  }\n  if (!values.education) {\n    errors.education = \"Musisz wybrać poziom edukacji\";\n  }\n  if (!values.location) {\n    errors.location = \"Musisz wybrać miejsce zamieszkania\";\n  }\n  return errors;\n};\nconst formReducer = (state, event) => {\n  return {\n    ...state,\n    [event.name]: event.value,\n  };\n};\n\nconst Metrics = () => {\n  const [errors, setErrors] = useState({});\n  const [formData, setFormData] = useReducer(formReducer, {});\n\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    if (Object.keys(formData).length === 0) {\n      setErrors(validate(formData));\n    } else if (Object.keys(formData).length === 5) {\n      setErrors(validate(formData));\n      console.log(errors);\n      if (JSON.stringify(errors) === \"{}\") {\n        console.log(JSON.stringify(formData, null, 2));\n        history.push(\"/instructions\");\n      }\n    } else {\n      setErrors(validate(formData));\n    }\n  };\n  const handleChange = (event) => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>Metryczka</h1>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Temporibus\n        ipsam nesciunt deserunt illo. Tempore qui expedita eum eligendi facilis\n        laudantium, repudiandae et iste quasi ipsa magni natus! Eius, corporis\n        magni!\n      </p>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Nick:\n          <input\n            type=\"text\"\n            name=\"nickname\"\n            onChange={handleChange}\n            value={formData.nickname || \"\"}\n          />\n          <br />\n          (potrzebny do identyfikacji dnia drugiego)\n        </label>\n        {errors.nickname ? (\n          <div className=\"error\">{errors.nickname}</div>\n        ) : null}\n\n        <label>\n          Wiek:\n          <input\n            type=\"number\"\n            name=\"age\"\n            onChange={handleChange}\n            value={formData.age || \"\"}\n          />\n        </label>\n        {errors.age ? <div className=\"error\">{errors.age}</div> : null}\n\n        <label>\n          Płeć:\n          <select\n            name=\"gender\"\n            onChange={handleChange}\n            value={formData.gender || \"\"}\n          >\n            <option value=\"\">Proszę wybrać płeć</option>\n            <option value=\"m\">Mężczyzna</option>\n            <option value=\"f\">Kobieta</option>\n          </select>\n        </label>\n        {errors.gender ? <div className=\"error\">{errors.gender}</div> : null}\n\n        <label>\n          Wykształcenie:\n          <select\n            name=\"education\"\n            onChange={handleChange}\n            value={formData.education || \"\"}\n          >\n            <option value=\"\">Proszę wybrać wykształcenie</option>\n            <option value=\"podstawowe\">Podstawowe</option>\n            <option value=\"średnie\">Średnie</option>\n            <option value=\"wyższe\">Wyższe</option>\n            <option value=\"zawodowe\">Zawodowe</option>\n          </select>\n        </label>\n        {errors.education ? (\n          <div className=\"error\">{errors.education}</div>\n        ) : null}\n\n        <label>\n          Miejsce zamieszkania:\n          <select name=\"location\" onChange={handleChange}>\n            <option value=\"\">Proszę wybrać miejsce zamieszkania</option>\n            <option value=\"wies\">Wieś</option>\n            <option value=\"malemiasto\">Miasto do 50tyś mieszkańców</option>\n            <option value=\"sredniemiasto\">\n              Miasto od 50tyś mieszkańców do 150tyś mieszkańców\n            </option>\n            <option value=\"duzemiasto\">\n              Miasto od 150tyś mieszkańców do 250tyś mieszkańców\n            </option>\n            <option value=\"metropolia\">\n              Miasto powyżej 250tyś miekszańców\n            </option>\n          </select>\n        </label>\n        {errors.location ? (\n          <div className=\"error\">{errors.location}</div>\n        ) : null}\n\n        <button className=\"btn\" type=\"submit\">\n          Zapisz\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Metrics;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Tutorial = () => {\n  const [phase, setPhase] = useState(0);\n\n  let history = useHistory();\n\n  async function handleKey(e) {\n    if (e.key === \" \") {\n      setPhase(phase + 1);\n    }\n  }\n  let content;\n  function displayInstructions(phase) {\n    if (phase === 0) {\n      return (content = (\n        <>\n          <h3>Witam!</h3>\n          <p>\n            To zadanie polega na reagowani na pary liter tak szybko i dokładnie\n            jak to tylko możliwe.\n          </p>\n        </>\n      ));\n    } else if (phase === 1) {\n      return (\n        <>\n          <h3>Podczas każdej próby</h3>\n          <ul>\n            <li>Zobaczysz pierwszą literę</li>\n            <li>Poczekaj, nastąpi długa przerwa</li>\n            <li>Zobaczysz drugą literę w czarnej ramce</li>\n          </ul>\n          <p>Będziesz reagował na każdą literę.</p>\n          <p>Kiedy zobaczysz piewszą literę, zawsze naciskaj klawisz A</p>\n        </>\n      );\n    } else if (phase === 2) {\n      return (\n        <>\n          <h3>Celem zadania jest wykrycie pary liter \"A-X\".</h3>\n          <p>\n            Jeśli wykryjesz tę parę liter <br />\n            (tj. pierwsza litera w próbie jest literą A, a druga litera to X),\n            <br />\n            wcisnąć przycisk 2 (L) tak szybko, jak to możliwe.\n            <br />\n            <br /> Pamiętaj, że zawsze będziesz naciskać przycisk 1 (A), gdy\n            zobaczysz pierwszą literę.\n            <br />\n            <br />\n            <br /> Innymi słowy, powinieneś/-aś: <br />\n          </p>\n          <ul>\n            <li>wcisnąć przycisk 1 (A), gdy pojawi się pierwsza litera</li>\n            <li>\n              nacisnąć przycisk 2 (L), jeśli drugą literą, którą widzisz na ekranie\n              jest X, a poprzednia była A\n            </li>\n          </ul>\n        </>\n      );\n    } else if (phase === 3) {\n      return (\n        <>\n          <h3>Jeśli NIE widzisz pary A-X, to powinieneś/-aś:</h3>\n          <p>\n            - naciśnąć przycisk 1 (A), gdy pojawi się pierwsza litera <br />-\n            naciśnąć przycisk  (A), jeśli druga litera nie należy do pary A-X\n          </p>\n        </>\n      );\n    } else if (phase === 4) {\n      return (\n        <>\n          <p>\n            W niektórych przypadkach, drugi bodziec nie będzie wcale literą, ale\n            cyfrą.\n            <br />W tych przypadkach, nie naciskaj ani przycisku 1 ani przycisku\n            2. Po prostu czekaj, aż bodziec zniknie.\n          </p>\n        </>\n      );\n    } else if (phase === 5) {\n      return (\n        <>\n          <p>\n            Masz tylko 1 sekundę, aby zareagować na każdy bodziec, więc\n            powinieneś/-aś zareagować tak szybko i dokładnie, jak to możliwe.\n          </p>\n        </>\n      );\n    } else if (phase === 6) {\n      return (\n        <>\n          <h3>Oto kilka przykładów, które pomogą ci zrozumieć zadanie.</h3>\n          <p>\n            <br />\n            Próba pierwsza: widzisz A, następuje długa przerwa, widzisz X.\n            Powinieneś/-aś wcisnąć przycisk 1(A), gdy pojawi się A, i przycisk 2 (L),\n            gdy pojawi się X. <br />\n            Próba druga: widzisz B, następuje długa przerwa, widzisz X.\n            Powinieneś wcisnąć przycisk 1 (A), gdy pojawi się B, i przycisk 1 (A), gdy\n            pojawi się X. <br />\n            Próba trzecia: widzisz A, jest duże opóźnienie, widzisz 6.\n            Powinieneś wcisnąć przycisk 1 (A), gdy pojawi się A, i w ogóle nie\n            reagować, gdy zobaczysz 6.\n          </p>\n        </>\n      );\n    } else if (phase === 7) {\n      return (\n        <>\n          <h3>I jeszcze jedna, ostatnia rzecz:</h3>\n          <p>\n            By prowadzić cię podczas zadania, usłyszysz dźwięk za każdym razem,\n            gdy popełnisz błąd.\n            <br />\n            Jeśli zareagujesz za wolno, usłyszysz dźwięk \"pukania\".\n          </p>\n        </>\n      );\n    } else if (phase === 8) {\n      return (\n        <>\n          <h3>Jeśli nacisniesz niewłaściwy przycisk odpowiedzi</h3>\n          <p>\n            (tzn. naciśniesz przycisk 2 (L), ale nie zobaczyłeś/-aś pary liter\n            \"A-X\", albo przycisk 1 (A), ale zobaczysz parę liter \"A-X\"), usłyszysz\n            dźwięk \"brzęczenia\".\n          </p>\n        </>\n      );\n    } else if (phase === 9) {\n      return (\n        <>\n          <p>\n            W końcu, jeśli naciśniesz jakiś przycisk <br />w odpowiedzi na cyfrę\n            (pamiętaj, że nigdy nie powinieneś/-aś naciskać przycisku\n            odpowiedzi, gdy drugim bodźcem jest cyfra), usłyszysz dźwięk\n            \"dee-dum\".\n          </p>\n        </>\n      );\n    } else if (phase === 10) {\n      return (\n        <>\n          <h3>\n            Jeśli zadanie nie jest jasne, proszę powiadom o tym teraz\n            eksperymentatora.\n          </h3>\n          <p>\n            Bardzo ważne jest, abyś w pełni zrozumiał/-a zadanie. Jeśli nie masz\n            żadnych pytań, zacznijmy trening. Umieść swój palec wskazujący na\n            przycisku 1, i twój środkowy palec na przycisku 2.\n          </p>\n        </>\n      );\n    } else if (phase === 11) {\n      return history.push(\"/displaytutorial\");\n    }\n  }\n\n  content = displayInstructions(phase);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKey);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n  console.log(phase);\n  return (\n    <div className=\"paper\">\n      <div className=\"intro\">\n        {content}\n\n        <p className=\"space\">\n          <br />\n          <strong>Naciśnij SPACJĘ aby kontynuować</strong>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Tutorial;\n","import { useEffect, useState } from \"react\";\n\nasync function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nasync function waitForClue() {\n  return new Promise((resolve) => {\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"a\") {\n        resolve(true);\n      }\n    });\n  });\n}\n\nasync function waitForResponse() {\n  return new Promise((resolve) => {\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"a\") {\n        resolve(\"A\");\n      } else if (event.key === \"l\") {\n        resolve(\"L\");\n      }\n    });\n  });\n}\n\nconst useDisplayLogic = (data) => {\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    async function controlOfDisplay(i) {\n      if (i < data.length) {\n        //Initial display of clue\n        setValue(data[i].clue);\n        //Waiting for response of user\n        const clueSeen = await waitForClue();\n        //Response came\n        if (clueSeen) {\n          //Display the wait-for-probe template\n          setValue(\"+ + +\");\n          //Display for 3s\n          await sleep(3000);\n        }\n        //3s passed, display of probe\n        setValue(data[i].probe);\n        //Waiting for response of participant\n        const response = await waitForResponse();\n        //Response happen eather Button1 or Button2\n        if (response === \"A\" || response === \"L\") {\n          // Saving response data\n          data[i].response = response;\n          // Waiting for new set for 3s\n          setValue(\"  +\\n+  +\");\n          await sleep(3000);\n\n          // Recursion with + 1\n          controlOfDisplay(i + 1);\n        }\n        // Iterated over whole set\n      } else {\n        alert(JSON.stringify(data, null, 2));\n      }\n    }\n\n    controlOfDisplay(0);\n  }, []);\n\n  return value;\n};\n\nexport default useDisplayLogic;\n","import data from \"../data/tutorial\";\nimport useDisplayLogic from \"./useDisplayLogic\";\n\nconsole.log(data[0]);\n\nconst Trening = () => {\n  const value = useDisplayLogic(data);\n\n  return (\n    <div className=\"box\">\n      <p className=\"letterInBox\">{value}</p>\n    </div>\n  );\n};\n\nexport default Trening;\n","import { useState } from \"react\";\n\nimport Trening from \"./strategy/Trening\";\n\nasync function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nconst DisplayTutorial = () => {\n  const [alert, setAlert] = useState(true);\n\n  async function prep() {\n    await sleep(3000);\n    setAlert(false);\n  }\n  prep();\n  return (\n    <div className=\"paper\">\n      {alert && (\n        <div className=\"intro\">\n          <h3>Za 3 sekundy zacznie się zadanie treningowe...</h3>\n        </div>\n      )}\n      {!alert && <Trening />}\n    </div>\n  );\n};\n\nexport default DisplayTutorial;\n","import Instructions from \"./Instructions\";\nimport Header from \"./Header\";\nimport DayToChoose from \"./DayToChoose\";\nimport Metricsv2 from \"./Metricsv2\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Tutorial from \"./Tutorial\";\nimport DisplayTutorial from \"./DisplayTutorial\";\n\nfunction App() {\n  const [name, setName] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header name={name} />\n        <Switch>\n          <Route exact path=\"/\">\n            <DayToChoose />\n          </Route>\n          <Route path=\"/metrics\">\n            <Metricsv2 />\n          </Route>\n          <Route path=\"/instructions\">\n            <Instructions />\n          </Route>\n          <Route path=\"/tutorial\">\n            <Tutorial />\n          </Route>\n          <Route path=\"/displaytutorial\">\n            <DisplayTutorial />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}